#include "stdafx.h"
#include <iostream>
#include <string>
using namespace std;

struct BSTNode {
	string data;
	BSTNode* left;
	BSTNode* right;
};


BSTNode* GetNewNode(string data) {
	BSTNode* newNode = new BSTNode();
	newNode->data = data;
	newNode->left = newNode->right = NULL;
	return newNode;
}

BSTNode* Insert(BSTNode* root, string data) {
	if (root == NULL) {
		root = GetNewNode(data);
	}
	else if (data <= root->data) {
		root->left = Insert(root->left, data);
	}
	else {
		root->right = Insert(root->right, data);
	}
	return root;
}

bool isBalanced(BSTNode* root, string data) {
	if (root == NULL) return false; 
	else if (root->data == data) return true; 
	else if (data <= root->data) return isBalanced(root->left, data);
	else return isBalanced(root->right, data);
}
void PreOrder(BSTNode* root) {
	if (root == NULL) return;
	cout << root->data << " ";
	PreOrder(root->left);
	PreOrder(root->right);
}

void InOrder(BSTNode* root) {
	if (root == NULL) return;
	InOrder(root->left);
	cout << root->data << " ";
	InOrder(root->right);
}
void PostOrder(BSTNode* root) {
	if (root == NULL) return;
	PostOrder(root->left);
	PostOrder(root->right);
	cout << root->data << " ";
}



int main()
{
	BSTNode* root = NULL;
	root = Insert(root, "jake");
	root = Insert(root,"jose");
	root = Insert(root,"tom");
	root = Insert(root, "william");
	root = Insert(root, "donald");
	root = Insert(root, "james");
	cout << " " << endl;
	cout << "PreOrder: ";
	PreOrder(root);
	cout << " " << endl;
	cout << "InOrder: ";
	InOrder(root);
	cout << " " << endl;
	cout << "PostOrder: ";
	PostOrder(root);
	cout << " " << endl;
	string Name;
	cout << "enter a name" << endl;
	cin >> Name;
	if (isBalanced(root, Name) == true) cout << "Balanced" << endl;
	else cout << "Not Balanced" << endl;

    return 0;
}

